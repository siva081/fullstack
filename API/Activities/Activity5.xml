<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="3e7ec956-b3c8-4a59-ab2f-80c25c72e465" created="3.2.0" activeEnvironment="Default environment" name="REST Project 5" resourceRoot="" updated="3.2.0 2020-04-06T18:44:59Z" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="1b69b266-56a8-420a-b856-10435dd6151f" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://www.datasciencetoolkit.org" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://www.datasciencetoolkit.org</con:endpoint></con:endpoints><con:resource name="Json" path="/maps/api/geocode/json" id="d7fb9b5c-63a1-4c2f-8fb6-50fa9d09341e"><con:settings/><con:parameters/><con:method name="Json" id="9065b5dd-6796-4394-8fd0-06ca65802e2f" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>address</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>502</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:json="http://www.datasciencetoolkit.org/maps/api/geocode/json">json:Response</con:element></con:representation><con:request name="Request 1" id="783a24d0-7dff-47a5-97a7-e9cacc3513b0" mediaType="application/json"><con:settings/><con:endpoint>http://www.datasciencetoolkit.org</con:endpoint><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:parameters><con:entry key="address" value=""/></con:parameters><con:parameterOrder><con:entry>address</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="4b8b9ad8-222e-498b-8a88-5d58f3f4abbd" name="http://www.datasciencetoolkit.org TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="1543d451-3ec8-4a3e-8fa7-76017861a05a" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="http://www.datasciencetoolkit.org TestCase 1" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="datasource" name="DataSource" id="0de05a2f-79c2-4177-987c-cd36e0554630"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Excel"><con:configuration><file>C:/Users/SivakumarTN/Documents/soap/dsexcel.xlsx</file><worksheet/><cell>A2</cell><ignoreEmpty>false</ignoreEmpty><evaluateFormulas>false</evaluateFormulas></con:configuration></con:dataSource><con:shared>false</con:shared><con:restartShared>false</con:restartShared><con:property>City</con:property><con:property>Expected Result</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="restrequest" name="Request 1" id="bbbcbf59-2a88-414a-a0d3-6268f88506a9"><con:settings/><con:config service="http://www.datasciencetoolkit.org" resourcePath="/maps/api/geocode/json" methodName="Json" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request 1" id="783a24d0-7dff-47a5-97a7-e9cacc3513b0" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://www.datasciencetoolkit.org</con:endpoint><con:request/><con:originalUri>http://www.datasciencetoolkit.org/maps/api/geocode/json</con:originalUri><con:assertion type="JsonPath Match" id="8cdc673c-4884-498b-836c-9cffc4d7b29b" name="JSONPath Match"><con:configuration><path>$['results'][0]['address_components'][0]['long_name']</path><content>${DataSource#Expected Result}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="address" value="${DataSource#City}"/></con:parameters><con:parameterOrder><con:entry>address</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="0953e8ad-3695-4430-9242-5bd874b2e1e8"><con:settings/><con:config><dataSourceStep>DataSource</dataSourceStep><targetStep>Request 1</targetStep><discardResults>true</discardResults></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:parameters/><con:parameters/></con:reporting><con:reporting/><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository/><con:tags/></con:soapui-project>